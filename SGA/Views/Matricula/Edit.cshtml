@model SGA.Models.Matricula

@{
    ViewBag.Title = "Editar";
}
<script src="http://tristanedwards.me/u/SweetAlert//lib/sweet-alert.js"></script>
<link rel="stylesheet" type="text/css" href="http://tristanedwards.me/u/SweetAlert//lib/sweet-alert.css">
@if (null != TempData["mensajeError"])
{
    <script type="text/javascript">
    swal({
        title:'PROMiDAT',
        text: '@TempData["mensajeError"]',
        type: "warning",
        confirmButtonText: "Ok!",
        html: true
    })
    </script>
    TempData["mensajeError"] = null;
}
else
{
    if (null != TempData["mensaje"])
    {
        <script type="text/javascript">
    swal({
        title:'PROMiDAT',
        text: '@TempData["mensaje"]',
        type: "success",
        confirmButtonText: "Ok!",
        html: true
    })
        </script>
        TempData["mensaje"] = null;

    }
}
<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Matricula</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.CursoID, "CursoID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CursoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CursoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstudianteID, "EstudianteID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EstudianteID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EstudianteID, "", new { @class = "text-danger" })
            </div>
        </div>       

        <div class="form-group">
            @Html.LabelFor(model => model.Calificaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <table class="table">
                <tr>
                    @foreach (var item in Model.Calificaciones)
                    {
                        <th>
                            <script type="text/javascript">
                                alert('@item.Tipo');
                            </script>
                            @Html.TextBox("tipos", item.Tipo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(modelItem => item.Tipo, "", new { @class = "text-danger" })                        
                        </th>
                    }
                    <th>@Html.Label("Nota Final", htmlAttributes: new { @class = "control-label col-md-2" })</th>
                </tr>
               <tr>
                    @foreach (var item in Model.Calificaciones)
                    {
                       <td>
                           @Html.HiddenFor(model => item.Id)

                           @Html.TextBox("valores",item.Valor, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(modelItem => item.Valor, "", new { @class = "text-danger" })
                      
                        </td>
                    }
                   <td>
                       @Html.EditorFor(model => model.NotaFinal, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.NotaFinal, "", new { @class = "text-danger" })
                   </td>
                </tr>
            </table>
            

        </div>
        
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
            </div>
</div>
}

<div>
    @Html.ActionLink("Volver Atrás", null, null, null, new { href = Request.UrlReferrer })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
