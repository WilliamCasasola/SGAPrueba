@model IEnumerable<SGA.ViewModels.GrupoMatriculaDia>

@{
    ViewBag.Title = "Estadísticas de los estudiantes";
}


<h2>Estadísticas de los estudiantes</h2>


<table>
    <tr>
        <th>
            Fecha Matricula
        </th>
        <th>
            Estudiantes
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DiaMatricula)
            </td>
            <td>
                @item.ContadorEstudiantes
            </td>
        </tr>
    }
</table>


<div id="my-graph" style="width:600px;height:250px;"></div>
<script src="https://cdn.plot.ly/plotly-latest.min.js"> </script>
<script>
Plotly.d3.csv('https://raw.githubusercontent.com/plotly/datasets/master/gapminderDataFiveYear.csv', function (err, rows) {
    var YEAR = 2007;
    var continents = ['Asia', 'Europe', 'Africa', 'Oceania', 'Americas'];
    var POP_TO_PX_SIZE = 2e5;
    function unpack(rows, key) {
        return rows.map(function (row) { return row[key]; });
    }

    var data = continents.map(function (continent) {
        var rowsFiltered = rows.filter(function (row) {
            return (row.continent === continent) && (+row.year === YEAR);
        });
        return {
            mode: 'markers',
            name: continent,
            x: unpack(rowsFiltered, 'lifeExp'),
            y: unpack(rowsFiltered, 'gdpPercap'),
            text: unpack(rowsFiltered, 'country'),
            marker: {
                sizemode: 'area',
                size: unpack(rowsFiltered, 'pop'),
                sizeref: POP_TO_PX_SIZE
            }
        };
    });
    var layout = {
        xaxis: { title: 'Life Expectancy' },
        yaxis: { title: 'GDP per Capita', type: 'log' },
        margin: { t: 20 },
        hovermode: 'closest'
    };
    Plotly.plot('my-graph', data, layout, { showLink: false });
});
</script>