@model SGA.Models.Factura

@{
    ViewBag.Title = "Crear";
}
<script src="http://tristanedwards.me/u/SweetAlert//lib/sweet-alert.js"></script>
<link rel="stylesheet" type="text/css" href="http://tristanedwards.me/u/SweetAlert//lib/sweet-alert.css">
@if (null != TempData["mensajeError"])
{
    <script type="text/javascript">
    swal({
        title:'PROMiDAT',
        text: '@TempData["mensajeError"]',
        type: "warning",
        confirmButtonText: "Ok!",
        html: true
    })
    </script>
    TempData["mensajeError"] = null;
}
else
{
    if (null != TempData["mensaje"])
    {
        <script type="text/javascript">
    swal({
        title:'PROMiDAT',
        text: '@TempData["mensaje"]',
        type: "success",
        confirmButtonText: "Ok!",
        html: true
    })
        </script>
        TempData["mensaje"] = null;
    }
}
<h2>Crear</h2>


@using (Html.BeginForm("Create", "Factura", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Factura</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>
        


        <div class="form-group">
            @Html.LabelFor(model => model.ClienteId, "ClienteId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClienteId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Comprobante, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="Comprobante" title="Seleccionar Comprobante"
                       type="file" name="Comprobante" />
                @Html.ValidationMessageFor(m => m.Comprobante)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

               @* @Html.EnumDropDownListFor(model => model.estado, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.estado, new[] { new SelectListItem { Text = "Cancelado", Value = "true" }, new SelectListItem { Text = "Sin Cancelar", Value = "false" } }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCancelado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCancelado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalCancelado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
        <h2>Detalles: </h2>
            @if (@ViewBag.Detalles == null)
            {
              <p>No hay detalles</p>
            }
            else
            {
                <div class="col-md-offset-2 col-md-10">
                    <table>
                        <tr>
                            @{
                                int cnt = 0;

                                foreach (var estuianteFactura in Model.Detalles)
                                {
                                    if (cnt++ % 3 == 0)
                                    {
                                        @:</tr><tr>
                                      }
                                    @:<td>
                                        <table>
                                            <tr><td><b>@estuianteFactura.Estudiante.Nombre</b></td></tr>
                                            @foreach (var titulo in estuianteFactura.Titulos)
                                            {
                                                <tr><td>@titulo.Id</td><td>@titulo.Nombre</td><td>$ @titulo.Precio</td></tr>


                                            }                                            
                                            <tr>
                                              <td>Total @estuianteFactura.Estudiante.Nombre:      $ @estuianteFactura.Titulos.Select(t => t.Precio).Sum() </td>
                                            </tr>
                                        </table>
                                            @:</td>


                                        @:</tr>
                            }
                                <tr><td>Total: @ViewBag.totalPagar</td></tr>
                            }
                        </table>
                    </div>
                                }

        </div>

       <div>
           @Html.ActionLink("Añadir Detalle", "Create", new
      {
          date = "Fecha",
          total = "TotalCancelado",
          state = "Estado",
          description = "Descripcion",
          client = "ClienteId",
          nuevo="Si"
      }, new { id = "link" })@*Usa jquery en jquery funciones*@
       </div>

      @{
          List<SGA.Models.Titulo> titulos = ViewBag.Titulos;
          if (titulos != null && @ViewBag.mostrarTitulos != null)
          {

            <div class="form-group">
                @Html.Label("Estudiante: ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("EstudianteId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                Productos
                <div class="col-md-offset-2 col-md-10">
                    <table>
                        <tr>     @{                       
                            int cnt = 0;
                                foreach (var titulo in titulos)
                                {
                                    if (cnt++ % 3 == 0)
                                    {
                                        @:</tr><tr>
                                      }
                                    @:<td>
                                        <input type="checkbox"
                                               name="titulosSeleccionados"
                                               value="@titulo.Id" />
                                        @titulo.Id @:  @titulo.Nombre  $ @titulo.Precio
                                        @:</td>
                       
                                @:</tr>
                            }
                            }</table>
                    </div>
                </div>
                <div>
                    @Html.ActionLink("Añadir Estudiante", "Create", new
               {
                   date = "Fecha",
                   total = "TotalCancelado",
                   state = "Estado",
                   description = "Descripcion",
                   client = "ClienteId",Selectedtitles= "titulosSeleccionados",studentID= "EstudianteId"
               }, new { id = "link2" })@*Usa jquery en jquery funciones*@
</div>
                            }
    }






                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Crear" class="btn btn-default" />
                    </div>
                </div>
</div>
}

@{
    List<SGA.Models.Factura> facturas = ViewBag.Facturas;
    if (facturas.Count() > 0)
    {
    <h3>Facturas de @ViewBag.ClienteNombre</h3>
    <table class="table">
        <tr>
            <th>
              # de Factura
            </th>
            <th>
                Nombre
            </th>
            <th>
                Fecha
            </th>
            <th>
               Descripción
            </th>
            <th>
                Estado
            </th>
            <th>
                Total Cancelado
            </th>
            <th></th>
        </tr>
       
        @foreach (var item in facturas)
        {      <tr>
                <td>
                    @item.Id
                </td>
                <td>
                    @item.Cliente.Nombre
                </td>
                <td>
                    @item.Fecha
                </td>
                <td>
                    @item.Descripcion
                </td>
                <td>
                    @item.estado
                </td>
                <td>
                    @item.TotalCancelado
                </td>
             <td>
                 @Html.ActionLink("Editar", "Edit", new { id = item.Id }) |
                 @Html.ActionLink("Detalles", "Details", new { id = item.Id }) |
                 @Html.ActionLink("Deshabilitar", "Delete", new { id = item.Id })
             </td>
            </tr>
        }
        
    </table>
        } }

<div>
    @Html.ActionLink("Volver Atrás", null, null, null, new { href = Request.UrlReferrer })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Styles.Render("~/Content/themes/base/css")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/Scripts/jqueryFunciones.js")
    @Scripts.Render("~/Scripts/jquery-formato-fechas.js")
}
}
